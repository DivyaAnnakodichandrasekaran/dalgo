<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-16T22:21:14 CDT" name="Default suite" finished-at="2022-10-16T22:21:46 CDT" duration-ms="32669">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-10-16T22:21:14 CDT" name="Default test" finished-at="2022-10-16T22:21:46 CDT" duration-ms="32669">
      <class name="Test.TestRun">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:14 CDT" name="setUpClass" finished-at="2022-10-16T22:21:14 CDT" duration-ms="529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1cc9bd9b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:14 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-16T22:21:19 CDT" duration-ms="4614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User Open Register page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:19 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-16T22:21:21 CDT" duration-ms="2626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user register without username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:21 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-16T22:21:25 CDT" duration-ms="3141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user register with valid username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:25 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-16T22:21:44 CDT" duration-ms="19057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user register with valid username and invalid password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:44 CDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-16T22:21:46 CDT" duration-ms="2627" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["user register with username and without password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "PageObjects.register_page.set_username(String)" because "this.rp" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "PageObjects.register_page.set_username(String)" because "this.rp" is null
at StepDefinitions.steps_register.user_enter_usename(steps_register.java:69)
at âœ½.user enter usename 3(classpath:features//register_DSalgo.feature:55)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Test.TestRun@350aac89]" started-at="2022-10-16T22:21:46 CDT" name="tearDownClass" finished-at="2022-10-16T22:21:46 CDT" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Test.TestRun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
